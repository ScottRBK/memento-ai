name:  ${COMPOSE_PROJECT_NAME:-Veridian}
networks:
  memento:

services:
  memento-service:
    image: ${DEPLOY_IMAGE_REPO:+ghcr.io/}${DEPLOY_IMAGE_REPO:-python_template}:${IMAGE_TAG:-latest}
    build:
      context: ${BUILD_CONTEXT:-..}
      dockerfile: docker/Dockerfile
    container_name: memento-service 
    restart: unless-stopped
    ports:
      - "${BIND_ADDRESS:-127.0.0.1}:${SERVER_PORT:-8020}:${SERVER_PORT:-8020}"
    env_file:
      - path: .env.${ENVIRONMENT:-example}
        required: true
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-example}
    networks:
      - "memento"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SERVER_PORT:-8020}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s 
    # Uncomment for development hot reload
    # volumes:
    #   - ../app:/app/app
    #   - ../main.py:/app/main.py
     
  memento-db:
    image: pgvector/pgvector:pg16
    networks:
      - "memento" 
    container_name: "memento-db"
    restart: unless-stopped
    env_file:
      - path: .env.${ENVIRONMENT:-example}
        required: true
    ports:
      - "127.0.0.1:${PGPORT:-5099}:${PGPORT:-5099}"
    volumes:
      - veridian_db_data:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-veridian} -d ${POSTGRES_DB:-veridian}"]
      interval: 5s
      timeout: 5s
      retries: 5


volumes:
  veridian_db_data: 

    
    