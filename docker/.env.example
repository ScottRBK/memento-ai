# ============================================
# Python Template - Environment Configuration
# ============================================
# Copy this file to .env.development, .env.staging, or .env.production
# and customize the values for your environment.

# Application Info
SERVICE_NAME=Memento
SERVICE_VERSION=v0.1.0
SERVICE_DESCRIPTION="Memento Service"

# Server Configuration
SERVER_HOST=0.0.0.0
SERVER_PORT=8020
LOG_LEVEL=INFO
LOG_FORMAT=json # console or json

# Docker Compose
COMPOSE_PROJECT_NAME=memento
ENVIRONMENT=example

# Use 127.0.0.1 for localhost-only (secure, recommended for production)
# Use 0.0.0.0 to expose on all interfaces (development only)
BIND_ADDRESS=127.0.0.1

#Repository Config
DATABASE=Postgres
# Use 127.0.0.1 for local development, memento-db for Docker deployments
POSTGRES_HOST=memento-db
PGPORT=5099
POSTGRES_DB=memento
## CHANGES THESE ##
POSTGRES_USER=memento
POSTGRES_PASSWORD=memento
DB_LOGGING=false

#AUTH Config
AUTH_ENABLED=false
DEFAULT_USER_ID="default-user-id"
DEFAULT_USER_NAME="default-user-name"
DEFAULT_USER_EMAIL="default.user@memento-ai.dev"

# Memory Configuration
MEMORY_TITLE_MAX_LENGTH=200      # Must be "easily titled" - scannable
MEMORY_CONTENT_MAX_LENGTH=2000   # ~300-400 words - single concept
MEMORY_CONTEXT_MAX_LENGTH=500    # Brief contextual description
MEMORY_KEYWORDS_MAX_COUNT=10     # For semantic clustering
MEMORY_TAGS_MAX_COUNT=10         # For categorization
MEMORY_TOKEN_BUDGET=8000         # token budget for retrieved memories (to protect context window)
MEMORY_MAX_MEMORIES=20           # maximum number of memories that can be retrieved from a query
MEMORY_NUM_AUTO_LINK=3           # number of memories to automatically link (set to 0 to prevent auto linking)

